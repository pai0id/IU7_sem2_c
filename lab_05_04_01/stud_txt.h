/*!
    \file
    \brief Заголовочный файл с модулями для работы с структуами в текстовом файле
*/

#ifndef __STUD_TXT_H__
#define __STUD_TXT_H__

#include <stdio.h>
#include <string.h>
#include "codes.h"
#include "stud.h"

#define N_STUDS 100

/**
 * \brief Обрабатывает файл, фильтруя и сохраняя подходящих студентов в массив.
 *
 * Функция считывает студентов из файла f_in и сохраняет тех, у кого фамилия совпадает с substr, в массив arr
 *
 * \param f_in [in] - файловый указатель на входной файл
 * \param arr [out] - массив для сохранения студентов
 * \param n [out] - указатель на переменную для сохранения количества студентов
 * \param substr [in] - подстрока, по которой происходит фильтрация
 * 
 * \return Код ошибки:
 *         - OK, если успешно обработан файл и есть сохраненные студенты
 *         - ERR_ARGS, если заданная подстрока некорректна
 *         - ERR_IO, если произошла ошибка ввода-вывода или превышено максимальное количество студентов
 *         - ERR_F_EMPTY, если файл пустой
 */
int proc_file(FILE *f_in, struct student_t arr[], size_t *n, char *substr);

/**
 * \brief Выводит массив студентов в файл.
 *
 * \param f_out [in] - файловый указатель на выходной файл
 * \param arr [in] - массив студентов
 * \param n [in] - количество студентов в массиве
 */
void print_arr_to_file(FILE *f_out, struct student_t arr[], size_t n);

#endif

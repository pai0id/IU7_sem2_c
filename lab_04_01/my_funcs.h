#ifndef MY_FUNCS_H
#define MY_FUNCS_H

// Для size_t
#include <stddef.h>

/// \brief Ищет первое вхождение в строку одного из заданных символов
///
/// \param str [in] - указатель на строку, в которой ведется поиск
/// \param sym [in] - указатель на строку с набором искомых символов
///
/// \return Указатель на первый найденный в строке символ, NULL, если не найден
char *my_strpbrk(const char *str, const char *sym);

/// \brief Определяет наибольшую длину начального участка строки, содержащего только заданные символы
///
/// \param str [in] - указатель на строку, в которой ведется поиск
/// \param sym [in] - указатель на строку с набором символов
///
/// \return Длина начального участка
size_t my_strspn(const char *str, const char *sym);

/// \brief Определяет наибольшую длину начального участка строки, не содержащего заданные символы
///
/// \param str [in] - указатель на строку, в которой ведется поиск
/// \param sym [in] - указатель на строку с набором символов
///
/// \return Длина начального участка
size_t my_strcspn(const char *str, const char *sym);

/// \brief Ищет первое вхождения символа
///
/// \param str [in] - указатель на строку, в которой ведется поиск
/// \param ch [in] - символ
///
/// \return Указатель на искомый символ, если не найден - NULL
char *my_strchr(const char *str, int ch);

/// \brief Ищет последнее вхождения символа
///
/// \param str [in] - указатель на строку, в которой ведется поиск
/// \param ch [in] - символ
///
/// \return Указатель на искомый символ, если не найден - NULL
char *my_strrchr(const char *str, int ch);

#endif
